{"version":3,"sources":["components/utils.tsx","components/search.jsx","components/layout.tsx","components/ep.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ExtLink","xmlns","opacity","fill","viewBox","d","secToMins","seconds","toFixed","replace","randomQuery","getRandomInt","max","Math","floor","random","withRouter","props","history","initValue","length","useState","location","search","qs","parse","value","setValue","suggestions","setSuggestions","exact","setExact","showExactInfo","setShowExactInfo","useReducer","x","forceUpdate","useEffect","setTimeout","onSuggestionFetchFuzzy","a","config","method","url","headers","btoa","data","from","size","query","multi_match","fields","fuzziness","axios","then","res","results","hits","map","h","_source","catch","err","console","log","onSuggestionFetchExact","type","operator","URLSearchParams","q","inputProps","placeholder","autoFocus","onChange","_","newValue","className","onClick","htmlFor","id","prev","checked","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","suggestion","epDetails","EpList","find","title","Episode","date","moment","pubDate","suggestionText","text","matches","AutosuggestHighlightMatch","parts","AutosuggestHighlightParse","to","pathname","encodeURIComponent","hash","startTime","format","href","part","index","highlight","focusInputOnSuggestionClick","alwaysRenderSuggestions","Layout","target","rel","Ep","speaker","episode","setEpisode","ep","useParams","epName","decodeURIComponent","match_phrase","sorted","sort","b","i","App","Fragment","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9c5adcac.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\n\r\n  export const ExtLink = (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      opacity=\"0.7\"\r\n      fill=\"#3182ce\"\r\n      viewBox=\"0 0 768 1024\"\r\n    >\r\n      <defs />\r\n      <path d=\"M640 768H128V258l128-2V128H0v768h768V576H640v192zM384 128l128 128-192 192 128 128 192-192 128 128V128H384z\" />\r\n    </svg>\r\n  )\r\n\r\n  \r\nexport const useFocus = () => {\r\n  const htmlElRef = useRef<HTMLElement>()\r\n  const setFocus = () => {\r\n    const currentEl = htmlElRef.current\r\n    currentEl && currentEl.focus()\r\n  }\r\n  return [setFocus, htmlElRef] as const\r\n}\r\n\r\nexport const secToMins = (seconds: number) => {\r\n  let minutes: number = seconds / 60\r\n  let totMins: string = minutes.toFixed(2)\r\n  var number = totMins.replace('.', ':')\r\n  return number\r\n}\r\n\r\nexport const randomQuery = [\r\n  \"santa man\",\r\n  \"teaser freezer\",\r\n  \"chef kevin\",\r\n  \"moriarty\",\r\n  \"scoop troop\",\r\n  \"You're Doing It Wrong: By Ho Ho Hove I Think Eggnog It\",\r\n  \"gmail roulette\",\r\n  \"speak on that\",\r\n  \"ice bucket challenge\",\r\n  \"cards against humanity\",\r\n  \"engineer cody boy\",\r\n  \"i love you and i'm in love with you\",\r\n  \"guardians of the galaxy\",\r\n  \"teen pope\",\r\n  \"bosch\",\r\n  \"homemade water\",\r\n  \"doughboys\"\r\n]\r\nexport function getRandomInt(max: number) {\r\n  return Math.floor(Math.random() * Math.floor(max))\r\n}","import React, { useEffect, useState, useReducer } from 'react'\nimport Autosuggest from 'react-autosuggest'\nimport axios from 'axios'\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match'\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse'\nimport moment from 'moment'\nimport './search.css'\nimport EpList from './eps.json'\nimport LazyLoad from 'react-lazyload'\nimport { Link, withRouter } from 'react-router-dom'\nimport qs from 'qs'\nimport { getRandomInt, randomQuery, ExtLink, secToMins } from './utils'\n\nconst Search = (props) => {\n\tlet { history } = props\n\tlet initValue = randomQuery[getRandomInt(randomQuery.length)]\n\tconst [ value, setValue ] = useState(history.location.search ? qs.parse(history.location.search)['?q'] : initValue)\n\tconst [ suggestions, setSuggestions ] = useState([])\n\tconst [ exact, setExact ] = useState(false)\n\tconst [ showExactInfo, setShowExactInfo ] = useState(false)\n\t// const [inputRef, setInputFocus] = useFocus()\n\tconst [ , forceUpdate ] = useReducer((x) => x + 1, 0)\n\n\tuseEffect(() => {\n\t\tsetShowExactInfo(() => true)\n\t\tsetTimeout(() => {\n\t\t\tsetShowExactInfo(() => false)\n\t\t}, 2000)\n\t}, [])\n\n\tconst onSuggestionFetchFuzzy = async ({ value }) => {\n\t\tconst config = {\n\t\t\tmethod: 'post',\n\t\t\turl: 'https://oin-us-east-1.searchly.com/paragraphs/_search',\n\t\t\theaders: {\n\t\t\t\t'authorization': 'Basic ' + btoa('searchAPI:gqnavy3vfwiu0xqkt4amqouciiidvvle') \n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t\tfrom: 0,\n\t\t\t\t\tsize: 99,\n\t\t\t\t\tquery: {\n\t\t\t\t\t\tmulti_match: {\n\t\t\t\t\t\t\tquery: value,\n\t\t\t\t\t\t\tfields: [ 'text', 'Episode' ],\n\t\t\t\t\t\t\tfuzziness: 'AUTO'\n\t\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t\tawait axios(config)\n\t\t\t.then((res) => {\n\t\t\t\tconst results = res.data.hits.hits.map((h) => h._source)\n\t\t\t\tsetSuggestions(() => results)\n\t\t\t\t// history.push({ search: encodeURIComponent(value) })\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tconst onSuggestionFetchExact = async ({ value }) => {\n\t\tconst config = {\n\t\t\tmethod: 'post',\n\t\t\turl: 'https://oin-us-east-1.searchly.com/paragraphs/_search',\n\t\t\theaders: {\n\t\t\t\t'authorization': 'Basic ' + btoa('searchAPI:gqnavy3vfwiu0xqkt4amqouciiidvvle') \n\t\t\t},\n\t\t\tdata: {\n\t\t\t\tfrom: 0,\n\t\t\t\tsize: 99,\n\t\t\t\tquery: {\n\t\t\t\t\tmulti_match: {\n\t\t\t\t\t\tquery: value,\n\t\t\t\t\t\tfields: [ 'text', 'Episode' ],\n\t\t\t\t\t\ttype: 'phrase',\n\t\t\t\t\t\toperator: 'and'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t\tawait axios(config)\n\t\t\t.then((res) => {\n\t\t\t\tconst results = res.data.hits.hits.map((h) => h._source)\n\t\t\t\tsetSuggestions(() => results)\n\t\t\t\t// history.push({ search: encodeURIComponent(value) })\n\t\t\t})\n\t}\n\n\tconst onSuggestionsClearRequested = () => {\n\t\treturn null\n\t}\n\n\tuseEffect(\n\t\t() => {\n\t\t\thistory.replace({\n\t\t\t\tsearch: '?' + new URLSearchParams({ q: value })\n\t\t\t})\n\t\t},\n\t\t[ history, value ]\n\t)\n\n\tconst renderSuggestion = (suggestion, { query }) => {\n\t\tlet epDetails = EpList.find((x) => x.title === suggestion.Episode)\n\t\tlet date = moment(epDetails.pubDate)\n\t\tconst suggestionText = suggestion.text\n\t\tconst matches = AutosuggestHighlightMatch(suggestionText, query)\n\t\tconst parts = AutosuggestHighlightParse(suggestionText, matches)\n\n\t\treturn (\n\t\t\t<LazyLoad>\n\t\t\t\t<div className=\"min-w-full px-4 pt-6 pb-6 mb-6 border-l-4 border-white shadow-md hover:border-gray-400\">\n\t\t\t\t\t<div className=\"flex flex-wrap items-center justify-between w-full mb-2\">\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: `/ep/${encodeURIComponent(suggestion.Episode)}`,\n\t\t\t\t\t\t\t\t\t\thash: `#:~:text=${secToMins(suggestion.startTime)}`\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName=\"flex flex-wrap items-end justify-start pt-1 mr-2 text-base text-gray-700 border-b border-white border-dotted hover:border-gray-400\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"mr-2\">\n\t\t\t\t\t\t\t\t\t\t{suggestion.Episode}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mr-2\">\n\t\t\t\t\t\t\t\t\t\t({date.format('YYYY MMM DD')})\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"text-xs\">\n\t\t\t\t\t\t\t\t\t\tfull ep\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className=\"flex items-center font-mono text-right text-gray-600\">\n\t\t\t\t\t\t\t<div className=\"hidden md:inline\">time:&nbsp;</div>\n\t\t\t\t\t\t\t{secToMins(suggestion.startTime)}&nbsp;\n\t\t\t\t\t\t\t<div className=\"mr-2 font-sans text-right text-blue-600 border-b-2 border-dotted\">\n\t\t\t\t\t\t\t\t<a href={`https://www.stitcher.com/search?q=${suggestion.Episode}#episodes`}>\n\t\t\t\t\t\t\t\t\tFind on Stitcher <div className=\"inline-block w-3 h-3 mb-px\">{ExtLink}</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"px-2 py-2 mt-4 border-l-2 border-gray-400 md:px-6 md:text-lg\">\n\t\t\t\t\t\t{parts.map((part, index) => {\n\t\t\t\t\t\t\tconst className = part.highlight ? 'highlight' : ''\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<span className={className} key={index}>\n\t\t\t\t\t\t\t\t\t{part.text.replace(/'/g, '')}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</LazyLoad>\n\t\t)\n\t}\n\n\tconst getSuggestionValue = (suggestions) => value\n\n\tconst inputProps = {\n\t\tplaceholder: 'Search',\n\t\tvalue,\n\t\tautoFocus: true,\n\t\tonChange: (_, { newValue }) => setValue(() => newValue)\n\t}\n\n\t// const renderInputComponent = (inputProps) => {\n\t// \treturn (\n\t// \t\t<div>\n\t// \t\t\t<input autoFocus {...inputProps} />\n\t// \t\t\t{/* <div>custom stuff</div> */}\n\t// \t\t</div>\n\t// \t)\n\t// }\n\n\tconst handleCheckbox = () => {\n\t\tsetExact((prev) => !prev)\n\t\tforceUpdate()\n\t\tsetShowExactInfo(() => true)\n\t\tsetTimeout(() => {\n\t\t\tsetShowExactInfo(() => false)\n\t\t}, 2000)\n\t}\n\n\tconst handleRandom = () => {\n\t\tsetValue(() => randomQuery[getRandomInt(randomQuery.length)])\n\t\tsetShowExactInfo(() => true)\n\t\tsetTimeout(() => {\n\t\t\tsetShowExactInfo(() => false)\n\t\t}, 2000)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<p className=\"mx-2 text-center\">Pro Version eps will be added soon!</p>\n\t\t\t<div className=\"flex flex-wrap items-center px-2 mt-2 md:px-2 md:mt-2\">\n\t\t\t\t<button className=\"px-2 mr-4 text-sm text-white bg-blue-700 rounded\" onClick={handleRandom}>\n\t\t\t\t\tGet random query\n\t\t\t\t</button>\n\n\t\t\t\t<label className=\"mr-4 text-sm\" htmlFor=\"check\">\n\t\t\t\t\tSearch exact matches:{' '}\n\t\t\t\t</label>\n\n\t\t\t\t<input id=\"check\" type=\"checkbox\" onChange={handleCheckbox} checked={exact} />\n\t\t\t\t{showExactInfo && (\n\t\t\t\t\t<div className=\"px-2 my-2 text-sm text-white bg-red-700 rounded md:mx-2 md:my-0\">\n\t\t\t\t\t\tClick the search bar\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className=\"flex flex-wrap w-full mt-2 mb-2 text-sm\">\n\t\t\t\t\t{suggestions.length === 99 ? (\n\t\t\t\t\t\t<p>99+ results for&nbsp;</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>{suggestions.length} results for&nbsp;</p>\n\t\t\t\t\t)}\n\t\t\t\t\t{value && <p>'{value}'&nbsp;</p>}\n\t\t\t\t\t{exact ? <p>(exact search)</p> : <p>(fuzzy search)</p>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<form>\n\t\t\t\t<Autosuggest\n\t\t\t\t\tsuggestions={suggestions}\n\t\t\t\t\tonSuggestionsFetchRequested={exact ? onSuggestionFetchExact : onSuggestionFetchFuzzy}\n\t\t\t\t\tonSuggestionsClearRequested={onSuggestionsClearRequested}\n\t\t\t\t\tgetSuggestionValue={getSuggestionValue}\n\t\t\t\t\trenderSuggestion={renderSuggestion}\n\t\t\t\t\tinputProps={inputProps}\n\t\t\t\t\tfocusInputOnSuggestionClick={false}\n\t\t\t\t\talwaysRenderSuggestions={true}\n\t\t\t\t\t// renderInputComponent={renderInputComponent}\n\t\t\t\t\t// autoFocus\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default withRouter(Search)\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function Layout() {\r\n  return (\r\n    <>\r\n      <div className=\"absolute top-0 flex flex-col items-center justify-center min-w-full min-h-screen text-3xl bg-white bg-opacity-75\">\r\n        <p>\r\n          This page has moved to{\" \"}\r\n          <a\r\n            className=\"font-bold text-purple-900 underline\"\r\n            href=\"https://handbook.pcast.site\"\r\n          >\r\n            https://handbook.pcast.site\r\n          </a>\r\n        </p>\r\n        <p>You will be redirected there in five seconds.</p>\r\n      </div>\r\n      <div className=\"flex flex-col flex-wrap items-center justify-center pt-8 pb-4\">\r\n        <div className=\"flex items-end justify-center p-2 mt-2 border-b-2 border-gray-500 md:px-8\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n              search: \"\",\r\n            }}\r\n          >\r\n            <div className=\"text-xl font-semibold tracking-tight uppercase md:text-2xl\">\r\n              Hollywood Handbook Search\r\n            </div>\r\n            <div className=\"text-base \">unofficial transcript archive</div>\r\n          </Link>\r\n          <div className=\"w-24 ml-4 text-xs leading-tight text-right text-blue-700 hover:underline\">\r\n            <a href=\"https://martenfrisk.github.io/seekerslounge\">\r\n              Teacher's Lounge search\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 text-sm\">\r\n          You can still download the raw transcripts formatted for Elasticsearch{\" \"}\r\n          <a\r\n            className=\"underline font-blue-800\"\r\n            href=\"https://github.com/martenfrisk/handbooksearch\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            here.\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { secToMins, ExtLink } from './utils'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport axios from 'axios'\r\n// import moment from 'moment'\r\n\r\nimport '../components/ep.css'\r\n\r\nexport default function Ep() {\r\n\tconst [ episode, setEpisode ] = useState([ { Episode: '', speaker: '', startTime: 0, text: '' } ])\r\n\tlet { ep } = useParams()\r\n\tconst epName = decodeURIComponent(ep)\r\n\r\n\tconst onSuggestionFetchExact = async (value) => {\r\n\t\tconst config = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\turl: 'https://oin-us-east-1.searchly.com/paragraphs/_search',\r\n\t\t\theaders: {\r\n\t\t\t\t'authorization': 'Basic ' + btoa('searchAPI:gqnavy3vfwiu0xqkt4amqouciiidvvle') \r\n\t\t\t},\r\n\t\t\tdata:{\r\n\t\t\t\tfrom: 0,\r\n\t\t\t\tsize: 9999,\r\n\t\t\t\tquery: {\r\n\t\t\t\t\tmatch_phrase: {\r\n\t\t\t\t\t\tEpisode: value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t\tawait axios(config)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst results = res.data.hits.hits.map((h) => h._source)\r\n        setEpisode(() => results)\r\n        console.log(results)\r\n\t\t\t})\r\n\t}\r\n\tuseEffect(() => {\r\n    onSuggestionFetchExact(epName)\r\n\t}, [ epName ])\r\n\r\n\tconst sorted = episode.sort((a, b) => a.startTime - b.startTime)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<div className=\"mb-4 text-2xl\">{episode[0].Episode}</div>\r\n        <a href={`https://www.stitcher.com/search?q=${episode[0].Episode}#episodes`} className=\"text-blue-500 border-b border-white hover:border-blue-500\">\r\n\t\t\t\t\t\t\t\t\tFind on Stitcher \r\n                  <div className=\"inline-block w-3 h-3 mb-px ml-1\">{ExtLink}</div>\r\n        </a>\r\n\t\t\t\t<div className=\"mt-4 text-justify\">\r\n\t\t\t\t\t{sorted.map((i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={i.text} className=\"flex mb-4\">\r\n                <div className=\"flex flex-col w-1/6\">\r\n\t\t\t\t\t\t\t\t<p>{secToMins(i.startTime)}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-700\">\r\n\r\n                {i.speaker}\r\n                  </p>\r\n                </div>\r\n                <div className=\"w-5/6\">\r\n\r\n\t\t\t\t\t\t\t\t{i.text.replace(/'/g, '')}\r\n                </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","// @ts-nocheck\nimport React, { ReactElement } from 'react'\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom'\n\nimport Search from './components/search'\nimport Layout from './components/layout'\nimport Ep from './components/ep'\nimport './styles/main.css'\n\nfunction App(props: any): ReactElement {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Router>\n\t\t\t\t<Layout />\n\t\t\t\t<div className=\"container w-full px-2 mx-auto md:px-10 lg:w-1/2\">\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/subreddit\">\n\t\t\t\t\t<Redirect to=\"/?q=subreddit\" />\n\t\t\t\t\t</Route>\n          <Route path=\"/ep/:ep\">\n            <Ep />\n          </Route>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// import { HashRouter as Router, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <>\n\t\t<App />\n  </>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}